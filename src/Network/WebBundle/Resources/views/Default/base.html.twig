<!DOCTYPE html>
<html>
    <head>
        <meta charset="UTF-8" />
        <title>{% block title %}Welcome!{% endblock %}</title>
        {% block stylesheets %}
            <link href="{{ asset('bundles/networkweb/css/reset.css') }}" type="text/css" rel="stylesheet" />
            <link href="{{ asset('bundles/networkweb/css/main.css') }}" type="text/css" rel="stylesheet" />
            <link href="{{ asset('bundles/networkweb/css/form.css') }}" type="text/css" rel="stylesheet" />
            <link href="{{ asset('bundles/networkweb/css/jBox.css') }}" type="text/css" rel="stylesheet" />
        {% endblock %}
        <link rel="icon" type="image/x-icon" href="{{ asset('favicon.ico') }}" />
        {% block javascripts %}
            <script src="{{ asset('bundles/sonatacore/vendor/jquery/dist/jquery.min.js') }}"></script>
            <script src="{{ asset('bundles/networkweb/js/jBox.min.js') }}"></script>
            <script src="{{ asset('bundles/networkweb/js/main.js') }}"></script>
        {% endblock %}
        <script>
            {% if app.user %}
            var userRequests = null;

            // TODO: fetch port number from websocket config.yml as it may differ
            websocket = new WebSocket('ws://' + window.location.hostname + ':6544/echo');
            websocket.onopen = function (evt) {
                {% block wsOpen %}
                wsSend({
                    action: 'auth',
                    data: '{{ app.user.webSocketAuthKey }}'
                });
                {% endblock wsOpen %}
            };
            websocket.onclose = function (evt) {
                {% block wsClose %}

                {% endblock wsClose %}
            };
            websocket.onmessage = function (evt) {
                {% block wsMessage %}
                var data = JSON.parse(evt.data);

                if (data.action == 'notify') {
                    new jBox('Notice', {
                        content: data.text,
                        color:  data.type,
                        autoClose: 2000
                    });
                } else if (data.action == 'deliver') {

                    if (addMessageRequest(data.thread_id)) {
                        redrawMessageRequest();
                    }

                    var content = ' <span class="new-message-author">'
                            +  data.post.author
                            + ':</span>'
                            + '<div class="new-message-text">'
                            + data.post.text + '</div>'
                    new jBox('Notice', {
                        content: content,
                        color:  'green',
                        autoClose: 2000,
                        maxWidth: 300,
                        attributes: {
                            x: 'right',
                            y: 'bottom'
                        }
                    });
                }
                {% endblock wsMessage %}
            };
            websocket.onerror = function (evt) {
                {% block wsError %}

                {% endblock wsError %}
            };
            function wsSend(data) {
                websocket.send(JSON.stringify(data));
            }
            {% else %}

            {% endif %}
        </script>
    </head>
    <body>
        {% block body %}
        {% endblock %}
    </body>
</html>
